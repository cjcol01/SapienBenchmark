const quoteElement = document.getElementById('quote');
const inputElement = document.getElementById('input');
const timerElement = document.getElementById('timer');
const wpmElement = document.getElementById('wpm');
const resetButton = document.getElementById('reset');
let timeLeft = 60;
let timer;
let wpmTimer;
let gameStarted = false;  // flag to check if game has started


// quotes generated by chatgpt
const quotes = [
    "Your time is limited, so don't waste it living someone else's life.",
    "The way to get started is to quit talking and begin doing.",
    "Life is what happens when you're busy making other plans.",
    "This coursework is so amazing, it makes Shakespeare's works look like amateur scribbles",
    "If brilliance had a name, it would be called this coursework. It's the secret ingredient to absolute genius.",
    "This coursework is the culinary equivalent of a five-star meal; each lesson is a delicacy to be savored.",
    "Imagine if Einstein and Newton collaborated on a project. That's the level of mind-blowing insight this coursework offers."
];

function getRandomQuote() {
    return quotes[Math.floor(Math.random() * quotes.length)];
}


function initializeGame() {
    if (!gameStarted) {
        gameStarted = true;
        quoteElement.textContent = getRandomQuote();
        startTimer();
        startWpmTimer();
    }
    inputElement.addEventListener('input', () => {
        updateInputStyle();
        checkCompletion();
    });
}

function startGame() {
    if (timeLeft === 60) {  // Start the game if the timer is at the full duration
        initializeGame();
    }
}

function startTimer() {
    timer = setInterval(() => {
        timeLeft--;
        timerElement.textContent = `Time left: ${timeLeft}s`;
        if (timeLeft === 0) {
            clearInterval(timer);
            clearInterval(wpmTimer);
            finishGame();
        }
    }, 1000); 
}

function startWpmTimer() {
    updateWpmDisplay();  // Initial update when the game starts
    wpmTimer = setInterval(updateWpmDisplay, 200);  
}

function updateWpmDisplay() {
    const wpm = calculateWordsPerMinute();
    wpmElement.textContent = `WPM: ${wpm}`;
}

function checkCompletion() {
    const currentInput = inputElement.value.trim();
    const currentQuote = quoteElement.textContent.trim();

    if (currentInput === currentQuote) {
        clearInterval(timer);
        clearInterval(wpmTimer);
        finishGame();
    }
}

function finishGame() {
    inputElement.disabled = true;
    const finalWpm = calculateWordsPerMinute();
    wpmElement.textContent = `Final WPM: ${finalWpm}`;
    alert(`Game over! Your typing speed is ${finalWpm} words per minute.`);
    gameStarted = false; // Reset the game started flag
}

function calculateWordsPerMinute() {
    const wordsTyped = inputElement.value.trim().split(' ').length;
    const timeSpent = (60 - timeLeft) / 60;
    return Math.round(wordsTyped / timeSpent);
}

function resetGame() {
    clearInterval(timer);
    clearInterval(wpmTimer);
    timeLeft = 60;
    timerElement.textContent = `Time left: ${timeLeft}s`;
    inputElement.value = '';
    quoteElement.textContent = getRandomQuote();
    inputElement.className = '';
    gameStarted = false;  // Reset the game started flag
    wpmElement.textContent = 'WPM: 0';  // Reset WPM display on game reset
}

function updateInputStyle() {
    const quoteText = quoteElement.textContent;
    const inputText = inputElement.value;

    for (let i = 0; i < inputText.length; i++) {
        if (inputText[i] !== quoteText[i]) {
            inputElement.className = 'incorrect';
            return; 
        }
    }

    inputElement.className = inputText.length === 0 ? '' : 'correct';
}


inputElement.addEventListener('input', () => {
    updateInputStyle();
    checkCompletion(); // Add this line to check completion on each input
});

inputElement.addEventListener('focus', initializeGame);
resetButton.addEventListener('click', resetGame);
window.onload = resetGame;